{"pages":[{"url":"https://blog.yoitsu.moe/links.html","text":"因为有伙伴们在，咱就不是孤独一人呐~ 下面的链接列表以结识的区域分类，排名不分先后。如果汝想和咱结交的话， 来这看看呗~ IRC 频道 #archlinux-cn farseerfc 正在日本就读的博士生一枚，Arch Linux TU（授信用户，维护官方软件仓库的一群人）一名，同时是个人生赢家😂 lilydjwg 依云 #archlinuxcn 社区管理者之一，美味或流浪的坚持用XMPP的百合仙子。 phoenixlzx 凤凰卷 #archlinuxcn 社区管理者之一，好吃的凤凰卷兼 #nyaacat MC喵窝 管理员之一。 LastAvengers 谷月轩 社区里人称LA，一个 自己写了内核 的最近又在学Python的像新手又像大神的人呐~ felixonmars 人称肥猫，Arch Linux中文社区网站的维护者之一+Arch Linux TU+刷包狂人（雾）+撑起了Arch Linux半壁江山的领袖（超大雾 御宅暴君 acgtyrant 身兼聽力殘疾，一直立身力行地一日三省，口風相當緊，中文審美嚴苛無比，計算機科學絕讚登堂中，批判性思維異常過人，完美無瑕之守序中立，偶尔飙中二腔，大愛 ACG 與 Arch Linux. LQYMGT #archlinux-cn 中的偶像，.sm 最多的人。 quininer U need tox （雾），小心Ta傲娇block汝呐~（大雾），写着一个JavaScript驱动的帅气博客。（没雾） Frantic1048 Chino Kafuu 智乃 香风 萌萌的智乃，自己很萌的同时喜欢一切萌物，前端技艺精湛，貌似正在构建新的博客框架…… Telegram群 MediaWiki 站长交流 冼睿通 Pumiao 逗比+滑稽一枚。（咱想不到该说啥了嘛~） 李坤严（夏日大三角） 工作于中国厦门，从事IT行业，做过运维、程序员（PHP+MySQL+SDK），下班除了生活，喜欢搞鼓VPS（Linux），还有开源软件，比如 MediaWiki，Etherpad，Seafile，以及一些小应用。 Ruqi Li MediaWiki站长交流Telegram群里第三个说话的人（第一个是咱，第二个是@Pumiao（滑稽）） 地点不明（准确的地点咱已经忘记了呐~） 编程随想的博客 一个不知道是谁的博客，只知道他（她）是个程序员（媛）。原来写了些编程相关的博文，后来也开始传授一些网络安全相关的技巧，偶尔也分享些电子书。 Xiaolan （蓝潇） 如同博主本人所说，没什么特别的主题，想到什么写什么.... FiveYellowMice 一位早就不该中二的中二少年，最近又开了一个脑洞，于是就开了这个博客。","tags":"pages","title":"友情链接"},{"url":"https://blog.yoitsu.moe/visualeditor_for_mediawiki.html","text":"为MediaWiki安装来自 维基媒体基金会 的 可视化编辑器 . 连维基百科都要Hold不住啦~ 许多新用户不会着手大幅度修改，而只是做些细节调整，不过仅仅阅读源代码就必须学标记语言了。当我们的用户在演示操作时，这把他们吓走了。 早在 2004 年，社群开始一再认识到必须采用更好的编辑方式。因为人们的请求，更重要的是他们的需要，所以我们开发了可视化编辑器。 Wiki 标记语言让新人害怕，这种程度会随着其他站点的迁离而加剧。如果我们不开发可视化编辑器，那么图表的走势会在接下来五年中变得更加糟糕。 — MediaWiki.org 所以他们才 痛定思痛 决定开发可视化编辑器么😂 开始之前-检查一下要求 可视化编辑器(下面就说VisualEditor呗~)还需要一个叫 Parsoid 的程序来承担把wiki标记转化成html的任务啦(看下图)~,所以需要服务器来运行它呐~ Parsoid的工作原理 安装Parsoid(Ubuntu 14+ / Debian 7+ ) 上游的指南在这(好好学英语呗~) https://www.mediawiki.org/wiki/Parsoid/Setup Ubuntu和Debian系统的话直接添加MediaWiki.org的软件源然后通过apt安装就好了啦~ 首先添加MediaWiki.org的GPG公钥: sudo apt-key advanced --keyserver keys.gnupg.net --recv-keys 664C383A3566A3481B942F007A322AC6E84AFDD2 然后添加Parsoid源: sudo echo \"deb https://releases.wikimedia.org/debian jessie-mediawiki main\" > /etc/apt/sources.list.d/parsoid.list 安装需要的软件包: sudo apt-get update && sudo apt-get install curl parsoid 然后看下下面一节的内容修改一下配置文件呗~ 其它系统?手动安装呗~ 上游的指南在这(还是要好好学英语呗~) https://www.mediawiki.org/wiki/Parsoid/Developer_Setup 首先汝要装上Nodejs(>0.8,建议0.10或更新的版本呐~),还有git. 具体的安装方法为了避免降低正交性 (其实是系统太多不好写......) ,就麻烦汝自己去找了呐~ 「呵。咱是贤狼，不是神呐。如果汝开始会期待起咱能够泄露天机给汝，那咱就得从汝眼前消失了呗。」 node --version # 如果是Debian或Ubuntu ,输入 nodejs --version 然后用git克隆版本库呗~ git clone https://gerrit.wikimedia.org/r/p/mediawiki/services/parsoid 用npm安装上相应的依赖: npm install 然后看下面一节的内容修改一下配置文件呗~ 修改配置文件 如果是通过软件源安装的,配置文件位于 /etc/mediawiki/parsoid/settings.js 如果是通过git下载的,从parsoid目录中先复制一份样例出来呗~ cp localsettings.js.example localsettings.js 打开配置文件,找到这一段内容,然后改它~: parsoidConfig . setMwApi ({ // The \"prefix\" is the name given to this wiki configuration in the // (deprecated) Parsoid v1 API. prefix : 'localhost' , // optional // The \"domain\" is used for communication with Visual Editor // and RESTBase. It defaults to the hostname portion of // the `uri` property below, but you can manually set it // to an arbitrary string. domain : 'localhost' , // optional // This is the only required parameter: // the URL of you MediaWiki API endpoint. uri : 'http://localhost/w/api.php' }); 其中\"uri\"对应汝的wiki的api.php的位置,\"domain\"是汝的域名啦~.\"prefix\"可以自己起一个(反正因为换了API也没用啦~,不过测试时可能用得到) 启动服务 从软件源安装的? sudo systemctl start parsoid # Debian Jessie ,用Systemd启动 sudo service parsoid start # Debian Wheezy 或Ubuntu ,用init.d脚本启动. 如果汝不是通过远程访问执行的命令,可以在浏览器上打开 http://localhost:8142 来进行测试.试着加载 http://localhost:8142/汝设置的前缀/汝的wiki上的一个页面 试试呗~ 用git安装的? npm start 或者: node bin/server.js 可以用screen一类的工具让Parsoid在后台运行~ 如果汝不是通过远程访问执行的命令,可以在浏览器上打开 http://localhost:8000 来进行测试.试着加载 http://localhost:8000/汝设置的前缀/汝的wiki上的一个页面 试试呗~ 修改监听地址便于远程测试 改这一段: // Allow override of port/interface: //parsoidConfig.serverPort = 8142; //parsoidConfig.serverInterface = '127.0.0.1'; 反注释最后一行并改成0.0.0.0,就可以通过 http://服务器的IP地址:8142 访问啦~ 安装VisualEditor扩展 上游的指南在这: https://www.mediawiki.org/wiki/Extension:VisualEditor 首先从 这里 获得扩展然后上传到汝的wiki上的extensions目录呗~ 然后修改汝的LocalSettings.php: require_once \"$IP/extensions/VisualEditor/VisualEditor.php\"; // 反注释下一行来默认启用可视化编辑器 #$wgDefaultUserOptions['visualeditor-enable'] = 1; // 反注释下一行来启用测试中的功能 #$wgDefaultUserOptions['visualeditor-enable-experimental'] = 1; //在除了主名字空间以外的名字空间中也启用可视化编辑器(下面的例子是用户名字空间) $wgVisualEditorNamespaces=array_merge($wgContentNamespaces,array( NS_USER )); 完整的设置选项可以在扩展页面上找到. 然后在汝的wiki上试试看呗~","tags":"Tech","title":"为MediaWiki安装可视化编辑器"},{"url":"https://blog.yoitsu.moe/new_yoitsu_birth.html","text":"就像标题描述的一样，新的\"约伊兹的萌狼乡手札\"以Pelican之姿再次出发啦~ 为啥要重做？ 原来的 约伊兹的萌狼乡手札 是基于MediaWiki搭建的,但是MediaWiki的本来用途并不是来做博客的呐~,不过咱还是一直拖着......直到 Arch Linux 宣布PHP7进入官方软件仓库 ,咱升级以后两个关键的RSS扩展都坏掉啦~(应该都知道RSS对于博客型网站的重要性呗~),于是咱痛定思痛决定升级😂 为啥是Pelican? 主要的原因是 人生赢家 farseerfc 用的也是Pelican，这样咱可以照着他的经历少走一些弯路...... 为啥不用Hexo,Ghost一类的博客系统呢?因为咱不太会设置Node.js(想当初给MediaWiki装可视化编辑器就折腾了半天)😂😂😂 那么有哪些问题咧? 首先Pelican用的标记语言是rst(重组的文本)或是MarkDown,不过看情况Markdown是刚加入进来的,处理的还不够好,就先用rst呗~ 然而咱并不会rst的语法......只好找来个 语法指南 先照着看...... 关于旧站的打算? 介于原来的网站也是咱折腾了一阵子才出来的,于是决定先留着.(这个新站的评论要靠它呐~) 咱以后也会继续折腾MediaWiki,顺便在这记下来一些过程和经验呗~ 关于评论? 目前的计划是用 https://wiki.yoitsu.moe/ 的Feedback名字空间或是Github issues来完成呐~汝问咱为啥不用Disqus? 受 fiveyellowmice 的影响,咱不会试图去收集汝的隐私呐~ 这个网站回放在咱自己的服务器上,然而由于开了Cloudflare的CDN又没安装插件,咱的服务器日志上的IP地址全部是来自Cloudflare的...... 咱还使用Google Analytics ，它收集像访问人数和浏览器类型之类的信息.而且(照Google的说法),它使用匿名标识符来区分每一个人.所以汝最好去看看 Google 的隐私政策 .如果汝真的不想让咱知道的话, 用Tor 呗~ 这里(不含用于评论的wiki.yoitsu.moe)本身不会创建任何Cookie,汝看到的Cookie是CloudFlare和Google Analytics创建的,和咱没啥关系. 用于评论的 原约伊兹的萌狼乡手札 是基于MediaWiki搭建的,所以匿名用户的IP地址会显示在编辑历史中(这是MediaWiki软件自身的设定,毕竟人家的本意是做开放的wiki不是?).如果汝使用账户登录的话,便会在汝的浏览器上设置Cookies呐~(登录用户的IP地址轻易不会让人知道的啦[#]_ ) 当然啦,如果汝觉得便捷大于对隐私的关注的话,可以发个评论抱怨一下咱~ [1] 通过Checkuser扩展可以查出注册用户进行编辑时的IP地址,然而咱并没有...... 作为新博客的第一篇博文就说到这里,咱具体是怎么做的 请听下回分解 😂😂😂","tags":"Tech","title":"新的\"约伊兹的萌狼乡手札\"诞生啦~"}]}